*** Les_4 *** Использование данных во View

На этом уроке мы рассмотрим, как мы можем создавать view используя форму. Форма в web страницах
это раздел документа, позволяющий пользователю вводить информацию для её последующей обработки,
например регистрация e-mail.
На этом уроке мы будем вводить в форму информацию и использовать эту информацию уже в другом view.


Теперь нам нужно в класс MyController добавить ещё 2 метода и связать их с адресами
/askDetails и /showDetails, после чего мы создадим два view.

Далее создадим два view.
В первом мы будем использовать форму для ввода данных и их отправки.

//тег br - это переход на новую строку
<br>
<br>

//Тег form отвечает за форму нашего запроса в странице браузера. Метод у этой формы - http метод "get"
//action напрямую связан с кнопкой submit, в нем указано, что должно произойти при нажатии этой
//кнопки. А произойти должен переход по адресу /showDetails. Переход по этому адресу перехватывает
//наш контроллер (класс MyController) и указывает какая web страница должна отобразиться. Далее тип
//type формы text, потому что мы будем вводить в неё текст. name="employeeName" - это переменная,
//имя поля нашей формы в которую мы вводим значение и эта переменная будет хранить введенное
//значение, т.е. после ввода имени в поле формы и нажатия кнопки submit, наша переменная будет
//хранить введенное имя. placeholder - это подсказка в поле нашей формы, говорящая о том, что
//нужно вводить. input type="submit" - это специальный тип, который будет отображать кнопку
//submit.

<form action="/showDetails" method="get">
    <input type="text" name="employeeName" placeholder="Write your name"/>
    <input type="submit"/>
</form>

Нужно так же иметь в виду, что если решили изучать Spring MVC, с помощью которого пишуться
web приложения, то должно быть очевидно, что так же необходимо обладать знаниями HTML, CSS,
JavaScript, jsp для создания качественных страниц.

Во втором view нам нужно прочитать информацию, которую мы ввели в форму на первой странице -
- наш первый view и вывести наше имя на экран.

Для чтения значения введенного в форме ask-emp-details-view.jsp используем следующий
синтаксис ${param.employeeName} - т.е. мы читаем наше имя из переменной employeeName.
Метод get в форме передает нам информацию об имени в адресе
http://localhost:8080//spring_for_beginners_course_mvc/showDetails?employeeName=Ivan

Для того, что бы нам в адресной строке браузера не вводить постоянно запрос askDetails
мы можем в first-view.jsp - это наша домашняя страница, создать ссылку на wiew -
- ask-emp-details-view.jsp. Ссылка создается следующим образом:
<a href="askDetails">Please write your details</a>, здесь Please write your details - это
имя ссылки при нажатии на которую будет открываться наш view  - ask-emp-details-view.jsp.



